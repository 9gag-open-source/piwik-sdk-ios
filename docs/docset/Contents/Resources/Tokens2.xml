<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/PiwikTracker.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/PiwikTracker</TokenIdentifier>
			<Abstract type="html">The PiwikTracker is an Objective-C framework (iOS and OSX) for sending analytics to a Piwik server.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<NodeRef refid="2"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PiwikTracker/sharedInstanceWithBaseURL:siteID:authenticationToken:</TokenIdentifier>
			<Abstract type="html">Create and configure a shared Piwik tracker.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>+ (instancetype)sharedInstanceWithBaseURL:(NSURL *)baseURL siteID:(NSString *)siteID authenticationToken:(NSString *)authenticationToken</Declaration>
			<Parameters>
				<Parameter>
					<Name>baseURL</Name>
					<Abstract type="html">The base URL of the Piwik server. The URL should not include the tracking endpoint path component (/piwik.php)</Abstract>
				</Parameter><Parameter>
					<Name>siteID</Name>
					<Abstract type="html">The unique site id generated by the the Piwik server when the tracked application is created</Abstract>
				</Parameter><Parameter>
					<Name>authenticationToken</Name>
					<Abstract type="html">The unique authentication token generated by the the Piwik server when the tracked application is created</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The newly created PiwikTracker</Abstract></ReturnValue>
			<Anchor>//api/name/sharedInstanceWithBaseURL:siteID:authenticationToken:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PiwikTracker/sharedInstance</TokenIdentifier>
			<Abstract type="html">Return the shared Piwik tracker.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/clm/PiwikTracker/sharedInstanceWithBaseURL:siteID:authenticationToken:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (instancetype)sharedInstance</Declaration>
			
			<ReturnValue><Abstract type="html">The existing PiwikTracker object</Abstract></ReturnValue>
			<Anchor>//api/name/sharedInstance</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setSiteID:</TokenIdentifier>
			<Abstract type="html">Piwik site id generated by the Piwik server.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) NSString *siteID</Declaration>
			
			
			<Anchor>//api/name/siteID</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/siteID</TokenIdentifier>
			<Abstract type="html">Piwik site id generated by the Piwik server.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) NSString *siteID</Declaration>
			
			
			<Anchor>//api/name/siteID</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/siteID</TokenIdentifier>
			<Abstract type="html">Piwik site id generated by the Piwik server.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) NSString *siteID</Declaration>
			
			
			<Anchor>//api/name/siteID</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setAuthenticationToken:</TokenIdentifier>
			<Abstract type="html">Piwik authentication token generated by the Piwik server.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) NSString *authenticationToken</Declaration>
			
			
			<Anchor>//api/name/authenticationToken</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/authenticationToken</TokenIdentifier>
			<Abstract type="html">Piwik authentication token generated by the Piwik server.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) NSString *authenticationToken</Declaration>
			
			
			<Anchor>//api/name/authenticationToken</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/authenticationToken</TokenIdentifier>
			<Abstract type="html">Piwik authentication token generated by the Piwik server.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) NSString *authenticationToken</Declaration>
			
			
			<Anchor>//api/name/authenticationToken</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setClientID:</TokenIdentifier>
			<Abstract type="html">Unique client id, used to identify unique visitors.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) NSString *clientID</Declaration>
			
			
			<Anchor>//api/name/clientID</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/clientID</TokenIdentifier>
			<Abstract type="html">Unique client id, used to identify unique visitors.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) NSString *clientID</Declaration>
			
			
			<Anchor>//api/name/clientID</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/clientID</TokenIdentifier>
			<Abstract type="html">Unique client id, used to identify unique visitors.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) NSString *clientID</Declaration>
			
			
			<Anchor>//api/name/clientID</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setIsPrefixingEnabled:</TokenIdentifier>
			<Abstract type="html">Views, events, exceptions and social tracking will be prefixed based on type.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL isPrefixingEnabled</Declaration>
			
			
			<Anchor>//api/name/isPrefixingEnabled</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/isPrefixingEnabled</TokenIdentifier>
			<Abstract type="html">Views, events, exceptions and social tracking will be prefixed based on type.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL isPrefixingEnabled</Declaration>
			
			
			<Anchor>//api/name/isPrefixingEnabled</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/isPrefixingEnabled</TokenIdentifier>
			<Abstract type="html">Views, events, exceptions and social tracking will be prefixed based on type.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL isPrefixingEnabled</Declaration>
			
			
			<Anchor>//api/name/isPrefixingEnabled</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setDebug:</TokenIdentifier>
			<Abstract type="html">Run the tracker in debug mode.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL debug</Declaration>
			
			
			<Anchor>//api/name/debug</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/debug</TokenIdentifier>
			<Abstract type="html">Run the tracker in debug mode.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL debug</Declaration>
			
			
			<Anchor>//api/name/debug</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/debug</TokenIdentifier>
			<Abstract type="html">Run the tracker in debug mode.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL debug</Declaration>
			
			
			<Anchor>//api/name/debug</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setOptOut:</TokenIdentifier>
			<Abstract type="html">Opt out of tracking.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL optOut</Declaration>
			
			
			<Anchor>//api/name/optOut</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/optOut</TokenIdentifier>
			<Abstract type="html">Opt out of tracking.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL optOut</Declaration>
			
			
			<Anchor>//api/name/optOut</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/optOut</TokenIdentifier>
			<Abstract type="html">Opt out of tracking.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL optOut</Declaration>
			
			
			<Anchor>//api/name/optOut</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setSampleRate:</TokenIdentifier>
			<Abstract type="html">The probability of an event actually being sampled and sent to the Piwik server. Value 1-100, default 100.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) double sampleRate</Declaration>
			
			
			<Anchor>//api/name/sampleRate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/sampleRate</TokenIdentifier>
			<Abstract type="html">The probability of an event actually being sampled and sent to the Piwik server. Value 1-100, default 100.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) double sampleRate</Declaration>
			
			
			<Anchor>//api/name/sampleRate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/sampleRate</TokenIdentifier>
			<Abstract type="html">The probability of an event actually being sampled and sent to the Piwik server. Value 1-100, default 100.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) double sampleRate</Declaration>
			
			
			<Anchor>//api/name/sampleRate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setIncludeLocationInformation:</TokenIdentifier>
			<Abstract type="html">Events sent to the Piwik server will include the users current position when the event was generated. This can be used to improve plotting of visitors location. Default NO. This value must be set before the tracker is used the first time.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL includeLocationInformation</Declaration>
			
			
			<Anchor>//api/name/includeLocationInformation</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/includeLocationInformation</TokenIdentifier>
			<Abstract type="html">Events sent to the Piwik server will include the users current position when the event was generated. This can be used to improve plotting of visitors location. Default NO. This value must be set before the tracker is used the first time.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL includeLocationInformation</Declaration>
			
			
			<Anchor>//api/name/includeLocationInformation</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/includeLocationInformation</TokenIdentifier>
			<Abstract type="html">Events sent to the Piwik server will include the users current position when the event was generated. This can be used to improve plotting of visitors location. Default NO. This value must be set before the tracker is used the first time.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL includeLocationInformation</Declaration>
			
			
			<Anchor>//api/name/includeLocationInformation</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setSessionStart:</TokenIdentifier>
			<Abstract type="html">Set this value to YES to force a new session start when the next event is sent to the Piwik server.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL sessionStart</Declaration>
			
			
			<Anchor>//api/name/sessionStart</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/sessionStart</TokenIdentifier>
			<Abstract type="html">Set this value to YES to force a new session start when the next event is sent to the Piwik server.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL sessionStart</Declaration>
			
			
			<Anchor>//api/name/sessionStart</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/sessionStart</TokenIdentifier>
			<Abstract type="html">Set this value to YES to force a new session start when the next event is sent to the Piwik server.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL sessionStart</Declaration>
			
			
			<Anchor>//api/name/sessionStart</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setSessionTimeout:</TokenIdentifier>
			<Abstract type="html">A new session will be generated if the application spent longer time in the background then the session timeout value. Default value 120 seconds.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) NSTimeInterval sessionTimeout</Declaration>
			
			
			<Anchor>//api/name/sessionTimeout</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/sessionTimeout</TokenIdentifier>
			<Abstract type="html">A new session will be generated if the application spent longer time in the background then the session timeout value. Default value 120 seconds.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) NSTimeInterval sessionTimeout</Declaration>
			
			
			<Anchor>//api/name/sessionTimeout</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/sessionTimeout</TokenIdentifier>
			<Abstract type="html">A new session will be generated if the application spent longer time in the background then the session timeout value. Default value 120 seconds.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) NSTimeInterval sessionTimeout</Declaration>
			
			
			<Anchor>//api/name/sessionTimeout</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/sendView:</TokenIdentifier>
			<Abstract type="html">Track a single screen view.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/isPrefixingEnabled</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (BOOL)sendView:(NSString *)screen</Declaration>
			<Parameters>
				<Parameter>
					<Name>screen</Name>
					<Abstract type="html">The name of the screen to track.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the event was queued for dispatching.</Abstract></ReturnValue>
			<Anchor>//api/name/sendView:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/sendViews:</TokenIdentifier>
			<Abstract type="html">Track a single hierarchical screen view.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/isPrefixingEnabled</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (BOOL)sendViews:(NSString *)screen, ...</Declaration>
			<Parameters>
				<Parameter>
					<Name>screen</Name>
					<Abstract type="html">A list of names of the screen to track.</Abstract>
				</Parameter><Parameter>
					<Name>...</Name>
					<Abstract type="html">A nil terminated list of names of the screen to track.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the event was queued for dispatching.</Abstract></ReturnValue>
			<Anchor>//api/name/sendViews:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/sendEventWithCategory:action:label:</TokenIdentifier>
			<Abstract type="html">Track an event (as oppose to a screen view).</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/isPrefixingEnabled</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (BOOL)sendEventWithCategory:(NSString *)category action:(NSString *)action label:(NSString *)label</Declaration>
			<Parameters>
				<Parameter>
					<Name>category</Name>
					<Abstract type="html">The category of the event</Abstract>
				</Parameter><Parameter>
					<Name>action</Name>
					<Abstract type="html">The action name</Abstract>
				</Parameter><Parameter>
					<Name>label</Name>
					<Abstract type="html">The label name, optional</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the event was queued for dispatching.</Abstract></ReturnValue>
			<Anchor>//api/name/sendEventWithCategory:action:label:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/sendExceptionWithDescription:isFatal:</TokenIdentifier>
			<Abstract type="html">Track a caught exception or error.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/isPrefixingEnabled</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (BOOL)sendExceptionWithDescription:(NSString *)description isFatal:(BOOL)isFatal</Declaration>
			<Parameters>
				<Parameter>
					<Name>description</Name>
					<Abstract type="html">A description of the exception. Maximum 50 characters</Abstract>
				</Parameter><Parameter>
					<Name>isFatal</Name>
					<Abstract type="html">YES if the exception will lead to a fatal application crash</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the event was queued for dispatching.</Abstract></ReturnValue>
			<Anchor>//api/name/sendExceptionWithDescription:isFatal:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/sendSocialInteraction:target:forNetwork:</TokenIdentifier>
			<Abstract type="html">Track a users interaction with social networks.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/isPrefixingEnabled</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (BOOL)sendSocialInteraction:(NSString *)action target:(NSString *)target forNetwork:(NSString *)network</Declaration>
			<Parameters>
				<Parameter>
					<Name>action</Name>
					<Abstract type="html">The action taken by the user, e.g. like, tweet</Abstract>
				</Parameter><Parameter>
					<Name>target</Name>
					<Abstract type="html">The target of the action, e.g. a comment, picture or video (often an unique id or name)</Abstract>
				</Parameter><Parameter>
					<Name>network</Name>
					<Abstract type="html">The social network the user is interacting with, e.g. Facebook</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the event was queued for dispatching.</Abstract></ReturnValue>
			<Anchor>//api/name/sendSocialInteraction:target:forNetwork:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/sendGoalWithID:revenue:</TokenIdentifier>
			<Abstract type="html">Track a goal conversion.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>- (BOOL)sendGoalWithID:(NSString *)goalID revenue:(NSUInteger)revenue</Declaration>
			<Parameters>
				<Parameter>
					<Name>goalID</Name>
					<Abstract type="html">The unique goal ID as configured in the Piwik server.</Abstract>
				</Parameter><Parameter>
					<Name>revenue</Name>
					<Abstract type="html">The monetary value of the conversion.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the event was queued for dispatching.</Abstract></ReturnValue>
			<Anchor>//api/name/sendGoalWithID:revenue:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/sendSearchWithKeyword:category:numberOfHits:</TokenIdentifier>
			<Abstract type="html">Track a search performed in the application. The search could be local or towards a server.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>- (BOOL)sendSearchWithKeyword:(NSString *)keyword category:(NSString *)category numberOfHits:(NSNumber *)numberOfHits</Declaration>
			<Parameters>
				<Parameter>
					<Name>keyword</Name>
					<Abstract type="html">The search keyword entered by the user.</Abstract>
				</Parameter><Parameter>
					<Name>category</Name>
					<Abstract type="html">An optional search category.</Abstract>
				</Parameter><Parameter>
					<Name>numberOfHits</Name>
					<Abstract type="html">The number of results found (optional).</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the event was queued for dispatching.</Abstract></ReturnValue>
			<Anchor>//api/name/sendSearchWithKeyword:category:numberOfHits:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setDispatchInterval:</TokenIdentifier>
			<Abstract type="html">The tracker will automatically dispatch all pending events on a timer. Default value 120 seconds.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/dispatch</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic) NSTimeInterval dispatchInterval</Declaration>
			
			
			<Anchor>//api/name/dispatchInterval</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/dispatchInterval</TokenIdentifier>
			<Abstract type="html">The tracker will automatically dispatch all pending events on a timer. Default value 120 seconds.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/dispatch</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic) NSTimeInterval dispatchInterval</Declaration>
			
			
			<Anchor>//api/name/dispatchInterval</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/dispatchInterval</TokenIdentifier>
			<Abstract type="html">The tracker will automatically dispatch all pending events on a timer. Default value 120 seconds.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/dispatch</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic) NSTimeInterval dispatchInterval</Declaration>
			
			
			<Anchor>//api/name/dispatchInterval</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setMaxNumberOfQueuedEvents:</TokenIdentifier>
			<Abstract type="html">Specifies the maximum number of events queued in core date. Default 500.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) NSUInteger maxNumberOfQueuedEvents</Declaration>
			
			
			<Anchor>//api/name/maxNumberOfQueuedEvents</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/maxNumberOfQueuedEvents</TokenIdentifier>
			<Abstract type="html">Specifies the maximum number of events queued in core date. Default 500.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) NSUInteger maxNumberOfQueuedEvents</Declaration>
			
			
			<Anchor>//api/name/maxNumberOfQueuedEvents</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/maxNumberOfQueuedEvents</TokenIdentifier>
			<Abstract type="html">Specifies the maximum number of events queued in core date. Default 500.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) NSUInteger maxNumberOfQueuedEvents</Declaration>
			
			
			<Anchor>//api/name/maxNumberOfQueuedEvents</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setEventsPerRequest:</TokenIdentifier>
			<Abstract type="html">Specifies how many events should be sent to the Piwik server in each request. Default 20 event per request.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL eventsPerRequest</Declaration>
			
			
			<Anchor>//api/name/eventsPerRequest</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/eventsPerRequest</TokenIdentifier>
			<Abstract type="html">Specifies how many events should be sent to the Piwik server in each request. Default 20 event per request.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL eventsPerRequest</Declaration>
			
			
			<Anchor>//api/name/eventsPerRequest</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/eventsPerRequest</TokenIdentifier>
			<Abstract type="html">Specifies how many events should be sent to the Piwik server in each request. Default 20 event per request.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) BOOL eventsPerRequest</Declaration>
			
			
			<Anchor>//api/name/eventsPerRequest</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/dispatch</TokenIdentifier>
			<Abstract type="html">Manually start a dispatch of all pending events.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>- (BOOL)dispatch</Declaration>
			
			<ReturnValue><Abstract type="html">YES if the dispatch process was started.</Abstract></ReturnValue>
			<Anchor>//api/name/dispatch</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/deleteQueuedEvents</TokenIdentifier>
			<Abstract type="html">Delete all pending events.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>- (void)deleteQueuedEvents</Declaration>
			
			
			<Anchor>//api/name/deleteQueuedEvents</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setAppName:</TokenIdentifier>
			<Abstract type="html">The application name.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSString *appName</Declaration>
			
			
			<Anchor>//api/name/appName</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/appName</TokenIdentifier>
			<Abstract type="html">The application name.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSString *appName</Declaration>
			
			
			<Anchor>//api/name/appName</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/appName</TokenIdentifier>
			<Abstract type="html">The application name.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSString *appName</Declaration>
			
			
			<Anchor>//api/name/appName</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setAppVersion:</TokenIdentifier>
			<Abstract type="html">The application version.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSString *appVersion</Declaration>
			
			
			<Anchor>//api/name/appVersion</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/appVersion</TokenIdentifier>
			<Abstract type="html">The application version.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSString *appVersion</Declaration>
			
			
			<Anchor>//api/name/appVersion</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/appVersion</TokenIdentifier>
			<Abstract type="html">The application version.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSString *appVersion</Declaration>
			
			
			<Anchor>//api/name/appVersion</Anchor>
		</Token>
		
	</File>
</Tokens>