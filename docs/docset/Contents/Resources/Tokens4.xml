<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/PiwikTracker.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/PiwikTracker</TokenIdentifier>
			<Abstract type="html">The PiwikTracker is an Objective-C framework (iOS and OSX) for sending analytics to a Piwik server.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
            
			
			<NodeRef refid="4"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PiwikTracker/sharedInstanceWithSiteID:baseURL:</TokenIdentifier>
			<Abstract type="html">Create and configure a shared Piwik tracker.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>+ (instancetype)sharedInstanceWithSiteID:(NSString *)siteID baseURL:(NSURL *)baseURL</Declaration>
			<Parameters>
				<Parameter>
					<Name>siteID</Name>
					<Abstract type="html">The unique site id generated by the the Piwik server when a new site is created</Abstract>
				</Parameter><Parameter>
					<Name>baseURL</Name>
					<Abstract type="html">The base URL of the Piwik server. The URL should not include the tracking endpoint path component (/piwik.php)</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The newly created PiwikTracker</Abstract></ReturnValue>
			<Anchor>//api/name/sharedInstanceWithSiteID:baseURL:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PiwikTracker/sharedInstanceWithSiteID:dispatcher:</TokenIdentifier>
			<Abstract type="html">Create and configure a shared Piwik tracker (designated initialiser).</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>+ (instancetype)sharedInstanceWithSiteID:(NSString *)siteID dispatcher:(id&lt;PiwikDispatcher&gt;)dispatcher</Declaration>
			<Parameters>
				<Parameter>
					<Name>siteID</Name>
					<Abstract type="html">The unique site id generated by the the Piwik server when the tracked application is created</Abstract>
				</Parameter><Parameter>
					<Name>dispatcher</Name>
					<Abstract type="html">The dispatcher that will perform the network request to the Piwik server</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The newly created PiwikTracker</Abstract></ReturnValue>
			<Anchor>//api/name/sharedInstanceWithSiteID:dispatcher:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PiwikTracker/sharedInstance</TokenIdentifier>
			<Abstract type="html">Return the shared Piwik tracker.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/clm/PiwikTracker/sharedInstanceWithSiteID:baseURL:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (instancetype)sharedInstance</Declaration>
			
			<ReturnValue><Abstract type="html">The existing PiwikTracker object</Abstract></ReturnValue>
			<Anchor>//api/name/sharedInstance</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setSiteID:</TokenIdentifier>
			<Abstract type="html">Piwik site id.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *siteID</Declaration>
			
			
			<Anchor>//api/name/siteID</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/siteID</TokenIdentifier>
			<Abstract type="html">Piwik site id.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *siteID</Declaration>
			
			
			<Anchor>//api/name/siteID</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/siteID</TokenIdentifier>
			<Abstract type="html">Piwik site id.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *siteID</Declaration>
			
			
			<Anchor>//api/name/siteID</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setDispatcher:</TokenIdentifier>
			<Abstract type="html">The dispatcher will execute the actual network request to the Piwik server.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (readonly) id&lt;PiwikDispatcher&gt; dispatcher</Declaration>
			
			
			<Anchor>//api/name/dispatcher</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/dispatcher</TokenIdentifier>
			<Abstract type="html">The dispatcher will execute the actual network request to the Piwik server.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (readonly) id&lt;PiwikDispatcher&gt; dispatcher</Declaration>
			
			
			<Anchor>//api/name/dispatcher</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/dispatcher</TokenIdentifier>
			<Abstract type="html">The dispatcher will execute the actual network request to the Piwik server.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (readonly) id&lt;PiwikDispatcher&gt; dispatcher</Declaration>
			
			
			<Anchor>//api/name/dispatcher</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setUserID:</TokenIdentifier>
			<Abstract type="html">The user id is any non empty unique string identifying the user, such as an email address or a username.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *userID</Declaration>
			
			
			<Anchor>//api/name/userID</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/userID</TokenIdentifier>
			<Abstract type="html">The user id is any non empty unique string identifying the user, such as an email address or a username.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *userID</Declaration>
			
			
			<Anchor>//api/name/userID</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/userID</TokenIdentifier>
			<Abstract type="html">The user id is any non empty unique string identifying the user, such as an email address or a username.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *userID</Declaration>
			
			
			<Anchor>//api/name/userID</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setIsPrefixingEnabled:</TokenIdentifier>
			<Abstract type="html">Views, exceptions and social tracking will be prefixed based on type.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL isPrefixingEnabled</Declaration>
			
			
			<Anchor>//api/name/isPrefixingEnabled</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/isPrefixingEnabled</TokenIdentifier>
			<Abstract type="html">Views, exceptions and social tracking will be prefixed based on type.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL isPrefixingEnabled</Declaration>
			
			
			<Anchor>//api/name/isPrefixingEnabled</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/isPrefixingEnabled</TokenIdentifier>
			<Abstract type="html">Views, exceptions and social tracking will be prefixed based on type.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL isPrefixingEnabled</Declaration>
			
			
			<Anchor>//api/name/isPrefixingEnabled</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setDebug:</TokenIdentifier>
			<Abstract type="html">Run the tracker in debug mode.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL debug</Declaration>
			
			
			<Anchor>//api/name/debug</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/debug</TokenIdentifier>
			<Abstract type="html">Run the tracker in debug mode.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL debug</Declaration>
			
			
			<Anchor>//api/name/debug</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/debug</TokenIdentifier>
			<Abstract type="html">Run the tracker in debug mode.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL debug</Declaration>
			
			
			<Anchor>//api/name/debug</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setOptOut:</TokenIdentifier>
			<Abstract type="html">Opt out of tracking.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL optOut</Declaration>
			
			
			<Anchor>//api/name/optOut</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/optOut</TokenIdentifier>
			<Abstract type="html">Opt out of tracking.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL optOut</Declaration>
			
			
			<Anchor>//api/name/optOut</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/optOut</TokenIdentifier>
			<Abstract type="html">Opt out of tracking.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL optOut</Declaration>
			
			
			<Anchor>//api/name/optOut</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setSampleRate:</TokenIdentifier>
			<Abstract type="html">The probability of an event actually being sampled and sent to the Piwik server. Value 1-100, default 100.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSUInteger sampleRate</Declaration>
			
			
			<Anchor>//api/name/sampleRate</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/sampleRate</TokenIdentifier>
			<Abstract type="html">The probability of an event actually being sampled and sent to the Piwik server. Value 1-100, default 100.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSUInteger sampleRate</Declaration>
			
			
			<Anchor>//api/name/sampleRate</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/sampleRate</TokenIdentifier>
			<Abstract type="html">The probability of an event actually being sampled and sent to the Piwik server. Value 1-100, default 100.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSUInteger sampleRate</Declaration>
			
			
			<Anchor>//api/name/sampleRate</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setIncludeDefaultCustomVariable:</TokenIdentifier>
			<Abstract type="html">If set to YES the SDK will use custom variable index 1-3 to provide default information about the app and users device (App version, OS version and HW) for each visit.
Set to NO to free up additional custom variable indexes for your own reporting purpose.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL includeDefaultCustomVariable</Declaration>
			
			
			<Anchor>//api/name/includeDefaultCustomVariable</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/includeDefaultCustomVariable</TokenIdentifier>
			<Abstract type="html">If set to YES the SDK will use custom variable index 1-3 to provide default information about the app and users device (App version, OS version and HW) for each visit.
Set to NO to free up additional custom variable indexes for your own reporting purpose.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL includeDefaultCustomVariable</Declaration>
			
			
			<Anchor>//api/name/includeDefaultCustomVariable</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/includeDefaultCustomVariable</TokenIdentifier>
			<Abstract type="html">If set to YES the SDK will use custom variable index 1-3 to provide default information about the app and users device (App version, OS version and HW) for each visit.
Set to NO to free up additional custom variable indexes for your own reporting purpose.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL includeDefaultCustomVariable</Declaration>
			
			
			<Anchor>//api/name/includeDefaultCustomVariable</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setSessionStart:</TokenIdentifier>
			<Abstract type="html">Set this value to YES to force a new session start when the next event is sent to the Piwik server.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL sessionStart</Declaration>
			
			
			<Anchor>//api/name/sessionStart</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/sessionStart</TokenIdentifier>
			<Abstract type="html">Set this value to YES to force a new session start when the next event is sent to the Piwik server.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL sessionStart</Declaration>
			
			
			<Anchor>//api/name/sessionStart</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/sessionStart</TokenIdentifier>
			<Abstract type="html">Set this value to YES to force a new session start when the next event is sent to the Piwik server.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL sessionStart</Declaration>
			
			
			<Anchor>//api/name/sessionStart</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setSessionTimeout:</TokenIdentifier>
			<Abstract type="html">A new session will be generated if the application spent longer time in the background then the session timeout value. Default value 120 seconds.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSTimeInterval sessionTimeout</Declaration>
			
			
			<Anchor>//api/name/sessionTimeout</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/sessionTimeout</TokenIdentifier>
			<Abstract type="html">A new session will be generated if the application spent longer time in the background then the session timeout value. Default value 120 seconds.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSTimeInterval sessionTimeout</Declaration>
			
			
			<Anchor>//api/name/sessionTimeout</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/sessionTimeout</TokenIdentifier>
			<Abstract type="html">A new session will be generated if the application spent longer time in the background then the session timeout value. Default value 120 seconds.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSTimeInterval sessionTimeout</Declaration>
			
			
			<Anchor>//api/name/sessionTimeout</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/sendView:</TokenIdentifier>
			<Abstract type="html">Track a single screen view.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/isPrefixingEnabled</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (BOOL)sendView:(NSString *)screen</Declaration>
			<Parameters>
				<Parameter>
					<Name>screen</Name>
					<Abstract type="html">The name of the screen to track.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the event was queued for dispatching.</Abstract></ReturnValue>
			<Anchor>//api/name/sendView:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/sendViews:</TokenIdentifier>
			<Abstract type="html">Track a single hierarchical screen view.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/isPrefixingEnabled</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (BOOL)sendViews:(NSString *)screen, ...</Declaration>
			<Parameters>
				<Parameter>
					<Name>screen</Name>
					<Abstract type="html">A list of names of the screen to track.</Abstract>
				</Parameter><Parameter>
					<Name>...</Name>
					<Abstract type="html">A nil terminated list of names of the screen to track.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the event was queued for dispatching.</Abstract></ReturnValue>
			<Anchor>//api/name/sendViews:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/sendEventWithCategory:action:name:value:</TokenIdentifier>
			<Abstract type="html">Track an user interaction as a custom event.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>- (BOOL)sendEventWithCategory:(NSString *)category action:(NSString *)action name:(NSString *)name value:(NSNumber *)value</Declaration>
			<Parameters>
				<Parameter>
					<Name>category</Name>
					<Abstract type="html">The category of the event</Abstract>
				</Parameter><Parameter>
					<Name>action</Name>
					<Abstract type="html">The name of the action, e.g Play, Pause, Download</Abstract>
				</Parameter><Parameter>
					<Name>name</Name>
					<Abstract type="html">Event name, e.g. song name, file name. Optional.</Abstract>
				</Parameter><Parameter>
					<Name>value</Name>
					<Abstract type="html">A numeric value, float or integer. Optional.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the event was queued for dispatching.</Abstract></ReturnValue>
			<Anchor>//api/name/sendEventWithCategory:action:name:value:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/sendExceptionWithDescription:isFatal:</TokenIdentifier>
			<Abstract type="html">Track a caught exception or error.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/isPrefixingEnabled</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (BOOL)sendExceptionWithDescription:(NSString *)description isFatal:(BOOL)isFatal</Declaration>
			<Parameters>
				<Parameter>
					<Name>description</Name>
					<Abstract type="html">A description of the exception. Maximum 50 characters</Abstract>
				</Parameter><Parameter>
					<Name>isFatal</Name>
					<Abstract type="html">YES if the exception will lead to a fatal application crash</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the event was queued for dispatching.</Abstract></ReturnValue>
			<Anchor>//api/name/sendExceptionWithDescription:isFatal:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/sendSocialInteraction:target:forNetwork:</TokenIdentifier>
			<Abstract type="html">Track a users interaction with social networks.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/isPrefixingEnabled</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (BOOL)sendSocialInteraction:(NSString *)action target:(NSString *)target forNetwork:(NSString *)network</Declaration>
			<Parameters>
				<Parameter>
					<Name>action</Name>
					<Abstract type="html">The action taken by the user, e.g. like, tweet</Abstract>
				</Parameter><Parameter>
					<Name>target</Name>
					<Abstract type="html">The target of the action, e.g. a comment, picture or video (often an unique id or name)</Abstract>
				</Parameter><Parameter>
					<Name>network</Name>
					<Abstract type="html">The social network the user is interacting with, e.g. Facebook</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the event was queued for dispatching.</Abstract></ReturnValue>
			<Anchor>//api/name/sendSocialInteraction:target:forNetwork:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/sendGoalWithID:revenue:</TokenIdentifier>
			<Abstract type="html">Track a goal conversion.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>- (BOOL)sendGoalWithID:(NSUInteger)goalID revenue:(NSUInteger)revenue</Declaration>
			<Parameters>
				<Parameter>
					<Name>goalID</Name>
					<Abstract type="html">The unique goal ID as configured in the Piwik server.</Abstract>
				</Parameter><Parameter>
					<Name>revenue</Name>
					<Abstract type="html">The monetary value of the conversion.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the event was queued for dispatching.</Abstract></ReturnValue>
			<Anchor>//api/name/sendGoalWithID:revenue:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/sendSearchWithKeyword:category:numberOfHits:</TokenIdentifier>
			<Abstract type="html">Track a search performed in the application. The search could be local or towards a server.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>- (BOOL)sendSearchWithKeyword:(NSString *)keyword category:(NSString *)category numberOfHits:(NSNumber *)numberOfHits</Declaration>
			<Parameters>
				<Parameter>
					<Name>keyword</Name>
					<Abstract type="html">The search keyword entered by the user.</Abstract>
				</Parameter><Parameter>
					<Name>category</Name>
					<Abstract type="html">An optional search category.</Abstract>
				</Parameter><Parameter>
					<Name>numberOfHits</Name>
					<Abstract type="html">The number of results found (optional).</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the event was queued for dispatching.</Abstract></ReturnValue>
			<Anchor>//api/name/sendSearchWithKeyword:category:numberOfHits:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/sendTransaction:</TokenIdentifier>
			<Abstract type="html">Track an ecommerce transaction.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/PiwikTransactionBuilder</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/PiwikTransaction</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/cl/PiwikTransactionItem</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (BOOL)sendTransaction:(PiwikTransaction *)transaction</Declaration>
			<Parameters>
				<Parameter>
					<Name>transaction</Name>
					<Abstract type="html">The transaction.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the event was queued for dispatching.</Abstract></ReturnValue>
			<Anchor>//api/name/sendTransaction:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/sendCampaign:</TokenIdentifier>
			<Abstract type="html">Track that the app was launched from a Piwik campaign URL.
The campaign information will be sent to the server with the next Piwik event.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>- (BOOL)sendCampaign:(NSString *)campaignURLString</Declaration>
			<Parameters>
				<Parameter>
					<Name>campaignURLString</Name>
					<Abstract type="html">A custom app URL containing campaign parameters.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if URL was detected to contain Piwik campaign parameter.</Abstract></ReturnValue>
			<Anchor>//api/name/sendCampaign:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/sendContentImpressionWithName:piece:target:</TokenIdentifier>
			<Abstract type="html">Track how often a specific ad or banner is displayed in the app.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/sendContentInteractionWithName:piece:target:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (BOOL)sendContentImpressionWithName:(NSString *)name piece:(NSString *)piece target:(NSString *)target</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">A human readable display name of the content.</Abstract>
				</Parameter><Parameter>
					<Name>piece</Name>
					<Abstract type="html">A more technical name/id of the content, e.g. the image name or ads id. Optional.</Abstract>
				</Parameter><Parameter>
					<Name>target</Name>
					<Abstract type="html">The outgoing target, e.g. an URL. Optional.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the event was queued for dispatching.</Abstract></ReturnValue>
			<Anchor>//api/name/sendContentImpressionWithName:piece:target:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/sendContentInteractionWithName:piece:target:</TokenIdentifier>
			<Abstract type="html">Track when a user interact with an ad or banner.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/sendContentImpressionWithName:piece:target:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (BOOL)sendContentInteractionWithName:(NSString *)name piece:(NSString *)piece target:(NSString *)target</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">A human readable display name of the content.</Abstract>
				</Parameter><Parameter>
					<Name>piece</Name>
					<Abstract type="html">A more technical name/id of the content, e.g. the image name or ads id. Optional.</Abstract>
				</Parameter><Parameter>
					<Name>target</Name>
					<Abstract type="html">The outgoing target, e.g. an URL. Optional.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the event was queued for dispatching.</Abstract></ReturnValue>
			<Anchor>//api/name/sendContentInteractionWithName:piece:target:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setCustomVariableForIndex:name:value:scope:</TokenIdentifier>
			<Abstract type="html">Assign a custom variable.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/includeDefaultCustomVariable</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (BOOL)setCustomVariableForIndex:(NSUInteger)index name:(NSString *)name value:(NSString *)value scope:(CustomVariableScope)scope</Declaration>
			<Parameters>
				<Parameter>
					<Name>index</Name>
					<Abstract type="html">Custom variable index. You should only use unique index numbers unless you want to overwrite your data.</Abstract>
				</Parameter><Parameter>
					<Name>name</Name>
					<Abstract type="html">Custom variable name.</Abstract>
				</Parameter><Parameter>
					<Name>value</Name>
					<Abstract type="html">Custom variable value.</Abstract>
				</Parameter><Parameter>
					<Name>scope</Name>
					<Abstract type="html">Using visit scope will associate the custom variable with the current session. Create a new session before and after setting a visit custom variable to limit the actions associated with the custom variable. Screen scope will limit the custom variable to a single screen view.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCustomVariableForIndex:name:value:scope:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setDispatchInterval:</TokenIdentifier>
			<Abstract type="html">The tracker will automatically dispatch all pending events on a timer. Default value 120 seconds.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/dispatch</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic) NSTimeInterval dispatchInterval</Declaration>
			
			
			<Anchor>//api/name/dispatchInterval</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/dispatchInterval</TokenIdentifier>
			<Abstract type="html">The tracker will automatically dispatch all pending events on a timer. Default value 120 seconds.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/dispatch</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic) NSTimeInterval dispatchInterval</Declaration>
			
			
			<Anchor>//api/name/dispatchInterval</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/dispatchInterval</TokenIdentifier>
			<Abstract type="html">The tracker will automatically dispatch all pending events on a timer. Default value 120 seconds.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/dispatch</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (nonatomic) NSTimeInterval dispatchInterval</Declaration>
			
			
			<Anchor>//api/name/dispatchInterval</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setMaxNumberOfQueuedEvents:</TokenIdentifier>
			<Abstract type="html">Specifies the maximum number of events queued in core date. Default 500.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSUInteger maxNumberOfQueuedEvents</Declaration>
			
			
			<Anchor>//api/name/maxNumberOfQueuedEvents</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/maxNumberOfQueuedEvents</TokenIdentifier>
			<Abstract type="html">Specifies the maximum number of events queued in core date. Default 500.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSUInteger maxNumberOfQueuedEvents</Declaration>
			
			
			<Anchor>//api/name/maxNumberOfQueuedEvents</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/maxNumberOfQueuedEvents</TokenIdentifier>
			<Abstract type="html">Specifies the maximum number of events queued in core date. Default 500.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSUInteger maxNumberOfQueuedEvents</Declaration>
			
			
			<Anchor>//api/name/maxNumberOfQueuedEvents</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setEventsPerRequest:</TokenIdentifier>
			<Abstract type="html">Specifies how many events should be sent to the Piwik server in each request. Default 20 events per request.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSUInteger eventsPerRequest</Declaration>
			
			
			<Anchor>//api/name/eventsPerRequest</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/eventsPerRequest</TokenIdentifier>
			<Abstract type="html">Specifies how many events should be sent to the Piwik server in each request. Default 20 events per request.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSUInteger eventsPerRequest</Declaration>
			
			
			<Anchor>//api/name/eventsPerRequest</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/eventsPerRequest</TokenIdentifier>
			<Abstract type="html">Specifies how many events should be sent to the Piwik server in each request. Default 20 events per request.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSUInteger eventsPerRequest</Declaration>
			
			
			<Anchor>//api/name/eventsPerRequest</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/dispatch</TokenIdentifier>
			<Abstract type="html">Manually start a dispatch of all pending events.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>- (BOOL)dispatch</Declaration>
			
			<ReturnValue><Abstract type="html">YES if the dispatch process was started.</Abstract></ReturnValue>
			<Anchor>//api/name/dispatch</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/deleteQueuedEvents</TokenIdentifier>
			<Abstract type="html">Delete all pending events.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>- (void)deleteQueuedEvents</Declaration>
			
			
			<Anchor>//api/name/deleteQueuedEvents</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setAppName:</TokenIdentifier>
			<Abstract type="html">The application name.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *appName</Declaration>
			
			
			<Anchor>//api/name/appName</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/appName</TokenIdentifier>
			<Abstract type="html">The application name.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *appName</Declaration>
			
			
			<Anchor>//api/name/appName</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/appName</TokenIdentifier>
			<Abstract type="html">The application name.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *appName</Declaration>
			
			
			<Anchor>//api/name/appName</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/setAppVersion:</TokenIdentifier>
			<Abstract type="html">The application version.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *appVersion</Declaration>
			
			
			<Anchor>//api/name/appVersion</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/PiwikTracker/appVersion</TokenIdentifier>
			<Abstract type="html">The application version.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *appVersion</Declaration>
			
			
			<Anchor>//api/name/appVersion</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/PiwikTracker/appVersion</TokenIdentifier>
			<Abstract type="html">The application version.</Abstract>
			<DeclaredIn>PiwikTracker.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *appVersion</Declaration>
			
			
			<Anchor>//api/name/appVersion</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
        
	</File>
</Tokens>